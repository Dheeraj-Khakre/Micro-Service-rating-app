spring.application.name=USER-SERVICE
server.port=8081
#database-dk.cbsky6q8u9pi.ap-south-1.rds.amazonaws.com
spring.datasource.url=jdbc:mysql://database-dk.cbsky6q8u9pi.ap-south-1.rds.amazonaws.com:3306/dheerajtest
spring.datasource.username=admin
spring.datasource.password=password
spring.datasource.driver-class-name=com.mysql.cj.jdbc.Driver
spring.jpa.hibernate.ddl-auto=update
spring.jpa.database-platform=org.hibernate.dialect.MySQL8Dialect

com.netflix.discovery.DiscoveryClient=false

logging.level.com.netflix.eureka=DEBUG
logging.level.com.netflix.discovery=DEBUG
#spring.profiles.active=prod


spring.config.import=optional:configserver:http://localhost:8085


eureka.client.enabled=true

# Eureka client configuration
# eureka.client.service-url.defaultZone=http://localhost:8761/eureka/
# eureka.client.register-with-eureka=true
# eureka.client.fetch-registry=true


# Instance configuration
eureka.instance.prefer-ip-address=true
eureka.instance.instance-id=${spring.application.name}:${server.port}


# circuit breaker properties 
management.health.circuitbreakers.enabled=true
management.endpoints.web.exposure.include=health
management.endpoint.health.show-details=always

resilience4j.circuitbreaker.instances.ratingHotelBreaker.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.eventConsumerBufferSize=10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.failureRateThreshold=50
resilience4j.circuitbreaker.instances.ratingHotelBreaker.minimumNumberOfCalls=5
resilience4j.circuitbreaker.instances.ratingHotelBreaker.automaticTransitionFromOpenToHalfOpenEnabled=true
resilience4j.circuitbreaker.instances.ratingHotelBreaker.waitDurationInOpenState=6s
resilience4j.circuitbreaker.instances.ratingHotelBreaker.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.ratingHotelBreaker.slidingWindowSize=10
resilience4j.circuitbreaker.instances.ratingHotelBreaker.slidingWindowType=COUNT_BASED

resilience4j.retry.instances.ratingHotelService.max-attempts=3
resilience4j.retry.instances.ratingHotelService.wait-duration=1s

resilience4j.ratelimiter.instances.userRateLimiter.limit-refresh-period=4s
resilience4j.ratelimiter.instances.userRateLimiter.limit-for-period=2
resilience4j.ratelimiter.instances.userRateLimiter.timeout-duration=2s
